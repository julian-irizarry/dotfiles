# Path to your Oh My Zsh installation.
export ZSH="$HOME/.oh-my-zsh"

export PATH=$PATH:/opt/nvim/:/home/jirizarry/.local/bin:/usr/local/go/bin:/home/jirizarry/go/bin:$HOME/.nix-profile/bin

export TERM=xterm-256color
export EDITOR='nvim'

plugins=(
	git
	zsh-syntax-highlighting
	zsh-autosuggestions
)

source $ZSH/oh-my-zsh.sh

setopt histignorealldups sharehistory

HISTSIZE=100000
SAVEHIST=100000
HISTFILE=~/.zsh_history

zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2
eval "$(dircolors -b)"
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true

zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'

alias vim='nvim'
alias nd='nix develop -vvv -c $SHELL'
alias cd="z"
alias ls="eza -a --icons=always"
alias ll="eza -lha --icons=always"

# Restore original keybinding for history search with Ctrl+R
bindkey '^R' .history-incremental-search-backward
bindkey "${terminfo[kcuu1]}" .up-line-or-history
bindkey "${terminfo[kcud1]}" .down-line-or-history

autoload -Uz edit-command-line
zle -N edit-command-line

function kitty_scrollback_edit_command_line() { 
  local VISUAL='/home/jirizarry/.local/share/nvim/lazy/kitty-scrollback.nvim/scripts/edit_command_line.sh'
  zle edit-command-line
  zle kill-whole-line
}
zle -N kitty_scrollback_edit_command_line

bindkey '^Xe' kitty_scrollback_edit_command_line   # Ctrl-x e

eval "$(oh-my-posh init zsh --config ~/.config/oh-my-posh/omp.json)"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion


export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/local/lib/x86_64-linux-gnu/pkgconfig:$PKG_CONFIG_PATH

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

find_and_cd_widget() {
    # Use fd to search for directories in the home folder and pipe to fzf
    local dir
    dir=$(fdfind --type d --hidden --follow --exclude .git . ~/ | fzf --preview 'tree -C {} | head -100' --preview-window=right:50%:wrap --height=40% --layout=reverse)

    # If a directory is selected, change to it in the main shell
    if [[ -n "$dir" ]]; then
        BUFFER="cd $dir" # Set the command line buffer to `cd $dir`
        zle accept-line   # Execute the buffer as if you pressed Enter
    else
        zle reset-prompt  # Redraw the prompt if no directory is selected
    fi
}

# Bind the widget to a key, e.g., Ctrl+F
zle -N find_and_cd_widget
bindkey '^F' find_and_cd_widget

eval "$(zoxide init zsh)"
eval "$(devbox global shellenv --init-hook)" 

# >>> mamba initialize >>>
# !! Contents within this block are managed by 'mamba shell init' !!
export MAMBA_EXE='/home/jirizarry/miniforge3/bin/mamba';
export MAMBA_ROOT_PREFIX='/home/jirizarry/miniforge3';
__mamba_setup="$("$MAMBA_EXE" shell hook --shell zsh --root-prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__mamba_setup"
else
    alias mamba="$MAMBA_EXE"  # Fallback on help from mamba activate
fi
unset __mamba_setup
# <<< mamba initialize <<<

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/jirizarry/miniforge3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/jirizarry/miniforge3/etc/profile.d/conda.sh" ]; then
        . "/home/jirizarry/miniforge3/etc/profile.d/conda.sh"
    else
        export PATH="/home/jirizarry/miniforge3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

